# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Assignment {
    _id: ObjectId!
    brief: Brief!
    course: Course!
    due: String!
    assigned: Boolean!
    late: String!
    name: String!
    specification: Specification!
    assignmentSubmissions: [Submission!]!
    created: String
}

input AssignmentInput {
    course: String!
    due: String!
    late: String!
    name: String!
}

type Brief {
    _id: ObjectId!
    description: String!
    markdown: File!
    title: String!
    created: String!
}

type Course {
    _id: ObjectId!
    courseAssignmentCount: Float!
    courseAssignments: [Assignment!]!
    description: String!
    courseFullName: String!
    instructor: User!
    locked: Boolean!
    name: String!
    section: Float!
    courseStudentCount: Float!
    created: String!
}

input CourseInput {
    description: String!
    name: String!
    section: Float!
}

type File {
    _id: ObjectId!
    created: String!
    fileLink: String!
    name: String!
    owner: User!
    reference: String!
}

type Mutation {
  addCompressedTests(fileUpload: Upload!, SpecificationId: ObjectId!): Specification!
  addProvidedFile(fileUpload: Upload!, SpecificationId: ObjectId!): Specification!
  addRequiredFile(file: String!, SpecificationId: ObjectId!): Specification!
  createAssignment(assignmentInput: AssignmentInput!): Assignment!
  createCourse(courseInput: CourseInput!): Course!
  removeProvidedFile(fileId: ObjectId!, SpecificationId: ObjectId!): Specification!
  removeRequiredFile(file: String!, SpecificationId: ObjectId!): Specification!
  updateSpecification(SpecificationId: ObjectId!, SpecificationInput: SpecificationInput!): Specification!
  uploadSubmission(assignmentId: ObjectId!, submissionUpload: [Upload!]!): Submission!
}

"""Mongo object id scalar type"""
scalar ObjectId

type Query {
    assignment(assignmentId: ObjectId!): Assignment!
    course(courseId: ObjectId!): Course!
    file(fileId: ObjectId!): File!
    instructorCourse(courseId: ObjectId!): Course!
    instructorCourses: [Course!]!
    self: User!
    Specification(SpecificationId: ObjectId!): Specification!
    studentAssignments: [Assignment!]!
    submission(submissionId: ObjectId!): Submission!
    TestSpecification(TestSpecificationId: ObjectId!): TestSpecification!
    user(targetId: ObjectId!): User!
    userSelf: User!
}

type Specification {
    _id: ObjectId!
    course: Course!
    created: String!
    command: String!
    timeout: Float!
    providedFiles: [File!]!
    requiredFiles: [String!]!
    tests: [TestSpecification!]!
}

input SpecificationInput {
    command: String!
    timeout: Float!
}

type Submission {
    _id: ObjectId!
    created: String!
    submissionAssignment: Assignment!
  submissionCompilationOutput: [String!]
  submissionCompilationTime: String!
  submissionFiles: [File!]!
  submissionOwner: User!
  submissionPassedTest: Boolean!
  submissionResults: [SubmissionResult!]!
}

type SubmissionResult {
    _id: ObjectId!
    created: String!
    exit: Float!
    memory: Float!
    test: TestSpecification!
    testElapsedTime: String!
    stderr: [String!]
    stdout: [String!]
    passed: Boolean!
}

type TestSpecification {
    _id: ObjectId!
    created: String!
    args: [String!]!
    testContext: [String!]!
    stderr: File
    exit: Float!
    stdin: File
    hidden: Boolean
    leaks: Boolean
    name: String!
    stdout: File
    timeout: Float!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  _id: ObjectId!
  account: String!
    courses: [Course!]
    created: String!
    email: String!
  firstname: String!
  fullName: String!
  lastname: String!
  password: String!
  username: String!
}
